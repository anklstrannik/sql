#task 1
SELECT model, speed, hd
FROM PC
WHERE price < 500


#task 2
SELECT DISTINCT maker
FROM Product
WHERE type = 'printer'


#task 3
SELECT model,ram, screen
FROM Laptop
WHERE price>1000


#task 4
SELECT *
FROM Printer
Where color = 'y'


#task 5
SELECT model, speed, hd
FROM PC
WHERE (cd= '12x' or cd = '24x') and price < 600


#task 6
SELECT DISTINCT maker, speed
FROM Product INNER JOIN
Laptop ON Laptop.model = Product.model
WHERE Laptop.hd>=10


#task 7
SELECT Product.model, price
FROM Product INNER JOIN PC
ON Product.model = PC.model
WHERE maker = 'B'
UNION
SELECT Product.model, price
FROM Product INNER JOIN Laptop
ON Product.model = Laptop.model
WHERE maker = 'B'
UNION
SELECT Product.model, price
FROM Product INNER JOIN Printer
ON Product.model = Printer.model
WHERE maker = 'B'


#task 8
SELECT DISTINCT maker
FROM product 
WHERE type = 'PC' AND
maker NOT IN (SELECT DISTINCT maker
FROM product 
WHERE type = 'Laptop')


#task 9
SELECT DISTINCT maker
FROM Product INNER JOIN PC
ON Product.model = PC.model
WHERE speed >= 450

#task 10
SELECT model, price
FROM Printer
WHERE price = (SELECT MAX(price)
FROM Printer
)

# task 11
SELECT AVG(speed) AS средняя_скорость
FROM PC


#task 12
SELECT AVG(speed) AS Среднняя_скорость
FROM Laptop
WHERE price > 1000


#task 13
SELECT AVG(speed) AS Среднняя_скорость
FROM PC INNER JOIN Product
ON PC.model = Product.model
WHERE maker = 'A'

#task 14
SELECT Ships.class, name, country
FROM Ships INNER JOIN Classes
ON Ships.class = Classes.class
WHERE numGuns >= 10


#task 15
SELECT DISTINCT hd
FROM PC
GROUP BY hd
HAVING COUNT(hd) > 1


#task 16
SELECT DISTINCT PC1.model, PC2.model, PC1.speed, PC1.ram
FROM PC PC1, PC PC2
WHERE PC1.speed = PC2.speed AND
PC1.ram = PC2.ram AND
PC1.model > PC2.model


#task 17
SELECT DISTINCT type, Laptop.model, speed
FROM Laptop INNER JOIN Product
ON Laptop.model = Product.model
WHERE speed < (SELECT MIN(speed)
FROM PC)


#task 18
SELECT DISTINCT maker, price
FROM Printer INNER JOIN Product
ON Printer.model = Product.model
WHERE price = (SELECT MIN(price) 
FROM Printer
WHERE color = 'y') AND
color = 'y'


#task 19
SELECT maker, 
    AVG(screen) AS Avg_screen
FROM Laptop INNER JOIN Product
ON Laptop.model = Product.model
GROUP BY maker


#task 20
SELECT Maker, COUNT(model)
FROM Product
WHERE type = 'PC'
GROUP BY Maker
HAVING COUNT(model) >= 3


#task 21
SELECT maker, MAX(price)
FROM PC INNER JOIN Product
ON PC.model = Product.model
GROUP BY maker


#task 22
SELECT speed, AVG(price) AS Avg_price
FROM PC
WHERE speed > 600
GROUP BY speed


#task 23
SELECT DISTINCT maker
FROM Product INNER JOIN PC
ON Product.model = PC.model
WHERE speed >=750 AND maker IN(
SELECT  maker
FROM Product INNER JOIN Laptop
ON Product.model = Laptop.model
WHERE speed >= 750)


#task 24
SELECT model
FROM (
SELECT model, price 
FROM PC 
UNION
SELECT model, price 
FROM Laptop 
UNION
SELECT model, price 
FROM Printer
) this_table
WHERE price = (
SELECT MAX(price) 
FROM (
SELECT model, price 
FROM PC 
UNION
SELECT model, price 
FROM Laptop 
UNION
SELECT model, price 
FROM Printer
)this_table2
)


#task 25
SELECT DISTINCT maker
FROM PC INNER JOIN Product
ON PC.model = Product.model
WHERE maker IN (
SELECT maker
FROM Product
WHERE type = 'printer'
)
AND speed = (
SELECT max(speed)
FROM PC
WHERE ram = (
SELECT MIN(ram)
FROM PC))
AND ram = (
SELECT MIN(ram)
FROM PC)


#task 26
SELECT AVG(price)
FROM (
SELECT code, speed, ram, hd, price
FROM PC INNER JOIN Product
ON PC.model=Product.model
WHERE maker = 'a'
UNION
SELECT code, speed, ram, hd, price
FROM Laptop INNER JOIN Product
ON Laptop.model=Product.model
WHERE maker = 'a'
) this_table


# task 27

SELECT maker, AVG(hd)
FROM PC INNER JOIN Product
ON PC.model = Product.model
WHERE maker IN (
SELECT DISTINCT maker
FROM Product
WHERE type = 'printer'
)
GROUP BY maker


# task 28
SELECT COUNT(maker)
FROM (SELECT maker 
FROM Product
GROUP BY maker
HAVING COUNT(model)=1) this_table


# task 29
SELECT income_o.point, income_o.[date], inc, out
FROM income_o LEFT JOIN Outcome_o
ON income_o.point = Outcome_o.point
AND income_o.[date] = Outcome_o.[date]
UNION
SELECT Outcome_o.point,  Outcome_o.[date], inc, out
FROM income_o RIGHT JOIN Outcome_o
ON income_o.point = Outcome_o.point
AND income_o.[date] = Outcome_o.[date]


# task 30
SELECT point, [date], SUM(outs), SUM(incs)
FROM (
SELECT point, [date], SUM(out) AS outs, null AS incs
FROM Outcome
GROUP by point, [date]
UNION
SELECT point, date, null AS outs, SUM(inc) AS incs
FROM Income
GROUP by point, [date]
)this_table
GROUP by point, [date]


# task 31
SELECT class, country
FROM Classes
WHERE bore >=16


# task 32
SELECT country, CAST(AVG(POWER(bore, 3)/2) AS DECIMAL(6,2))
FROM (
SELECT country, bore, name
FROM Classes INNER JOIN Ships
ON Classes.class = Ships.class
UNION
SELECT country, bore, ship
FROM Classes INNER JOIN Outcomes
ON Classes.class = Outcomes.ship
)this_table
GROUP BY country


# task 33
SELECT ship
FROM Outcomes
WHERE battle = 'North Atlantic' AND
result = 'sunk'


# task 34
SELECT DISTINCT name
FROM Ships INNER JOIN Classes
ON Ships.class = Classes.class
WHERE displacement > 35000
AND launched >= 1922
AND type = 'bb'


# task 35
SELECT model, type
FROM Product
WHERE model NOT LIKE '%[^0-9]%'
OR model NOT LIKE '%[^a-zA-Z]%'



#task 42
SELECT ship, battle
FROM Outcomes
WHERE result = 'sunk'


